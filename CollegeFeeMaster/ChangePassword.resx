<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lblHeading.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhGgQ1AIUAAP////7+//7+/v3+/vz9/f/8+fv8/fr7/fn6/Pf6+/f5+/747/T4+vb4+/X3+vP3
        +vP2+f/05PL1+fH1+fD09+/z9+7y9+zx9e3x9urw9erv9Onu9Oft8+bs8+Pq8eDo7/fhv93l7tnj7NXg
        6vnaq9Ld6c7a5/jRlvzLf/vBafy4Uv2rL/ydD42qx/+ZADNmmQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH/C05FVFNDQVBFMi4wAwEBAAAh+QQAAAAAACwAAAAAGgQ1
        AAAI/wBRrGDhoqDBgwgTKlzIsKHDhxAjSpxIsaLFixgzatzIsaPHjyBDihxJsqTJkyhTqlzJsqXLlzAf
        LigQgQQKFSti6tzJs6fPn0CDCh1KtKjRo0iTKk0aoGmAAlAjgDiBIgVOgkuzat3KtavXr2DDih1LtqxO
        AGjTqlXrNMCAtwTiyo2boG7dB3gp6N17oa+GvxsCb+BAuIPhw4gTK17MuLHjx5AjS55MubLly5gza97M
        ubPnz6BDix5NurTp06hTq17NurXr17ARr5291unbAXNz272L98FeC8CDZ8jwtzhgwciTK1/OvLnz59Cj
        S59Ovbr169iza9/Ovbv37+DDi/8fT768+fPo06tfz769+/fwkdOeD6Bt09wEDujf36C/fwkS7KVXcBZg
        YGBfCCao4IIMNujggxBGKOGEFFZo4YUYZqjhhhx26OGHIIYo4ogklmjiiSimqOKKLLbo4oswxsggfbS1
        dRt+++Xo338ABrhXBUBWQOCQRBZp5JFIJqnkkkw26eSTUEYp5ZRUVmnllVhmqeWWXHbp5ZdghinmmGSW
        aeaZaKapppI01mgbXLnlqOOODUBgp50T5DmBgHz26eefgAYq6KCEFmrooYgmquiijDbq6KOQRirppJRW
        aumlmGaq6aacdurpp6CGKuqohLY5m3034iinfv0x4Kqrvd3DaWePtNZq66245qrrrrz26uuvwAYr7LDE
        Fmvsscgmq+yyzDbr7LPQRivttNRWa+212Gar7bbc4mrqqTbCKZcB5O6HwLnoIuDfq6464O678MYr77z0
        1mvvvfjmq+++/Pbr778AByzwwAQXbPDBCCes8MIMN+zwwxBHLPHEFFds8cUY0/ttbaimOm65OaJrlwIk
        k0znySinrPLKLLfs8sswxyzzzDTXbPPNOOes88489+zzz0AHLfTQRBdt9NFIJ6300kw3/z3zxhyHK+5c
        5Bqw6gHpIrDb1lx37fXXYIct9thkl2322WinrfbabLft9ttwxy333HTXbffdeOet99589+3334AHLnjZ
        UEct9dQfg3z14ow37vjjkEcu+eSUV2755ZhnrvnmnHfu+eeghy766KSXbvrpqKeu+uqst+7666cXbvjh
        uOFHddW4Ww377rz37vvvwAcv/PDEF2/88cgnr/zyo8sOrn1N3eax7dRXb/312Gev/fbcd+/99+CHL/74
        5Jdv/vnop6/++uy37/778Mcv//z012///fjT77yb0L8pvfT5C6AAB0jAAhrwgAhMoAIXyMAGOvCBEIxg
        /fZHn/5Z8Mx/GMygBjfIwQ568IMgDKEIR0jCEprwhChMoQpXyMIWuvCFMIyhDGdIwxra8IY4zKEOd8jD
        HvqwhRScjwWHSMQiGvGISEyiEpfIxCY68YlQjKIUp0jFKlrxiljMoha3yMUuevGLYAyjGMdIxjKa8Yxo
        TKMa18jGNrrxjXCMoxznSMc62vGOeMyjHvfIxz768Y+ADKQgB0nIQhrykIj84w8XychGOvKRkIykJCdJ
        yUpa8pKYzKQmN8lJFUrwk6AMpShHScpSmvKUqEylKlf/ycpWuvKVsIylLGdJy1ra8pa4HCDzdsnLXvry
        l8AMpjCHScxiGvOYyEymMpfJzGY685nQjKY0p0nN3g3umtjMpja3yc1uevOb4AynOMdJznKa85zodJvT
        1snOdrrznfCMpzznSc962vOe+MynPvfJz5xl7J8ADahAB0rQghr0oAhNqEIXytCGOvShECVYtyZK0Ypa
        9KIYzahGN8rRjnr0oyANqUhHSlJkkeqkKE2pSlfK0pa69KUwjalMZ0rTmtr0pjh91Jp2ytOe+vSnQA2q
        UIdK1KIa9ahITapSl8pUK8noqVCNqlSnStWqWvWqWM2qVrfK1a569atg7VB8xkrWFbKa9axoTata18rW
        trr1rXCNq1znSv9X7sTmrnjNq173yte++vWvgA2sYAdL2MIa9rCI5YwHFsvYxjr2sZCNrGQnS9nKWvay
        mM2sZjfL2c569rOgDa1oR0va0pr2tKhNrWpXy9rWuva1sI2tbGdL29raFrMfyK1ud8vb3vr2t8ANrnCH
        S9ziGve4yE2ucpfL3OY697nQja50p0vd6lr3utjNrna3y93ueve74A2veMdLXuOG4LzoTa9618ve9rr3
        vfCNr3znS9/62ve++M2vfvfL3/76978ADrCAB0zgAhv4wAhOsIIXzOAGO/jBEI6whOkrggpb+MIYzrCG
        N8zhDnv4wyAOsYhHTOISm/jEKE6xilfM4hb/u/jFMI6xjGdM4xrb+MY4zrGOd8zjHvv4x0AW8QiGTOQi
        G/nISE6ykpfM5CY7+clQjrKUp0zlKlv5yljOspa3zOUue/nLYA6zmMdM5jKb+cxoTrOa18zmNrsZyiWI
        s5znTOc62/nOeM6znvfM5z77+c+ADrSgB03oQhv60IhOtKIXzehGO/rRkI60pCdN6Upb+tKYzrSmN81p
        P5vg06AOtahHTepSm/rUqE61qlfN6la7+tWwjrWsZ03rWtv61rjOta53zete+/rXwA62sIdN7GIb+9jI
        TrayWR3EZjv72dCOtrSnTe1qW/va2M62trfN7W57+9vgDre4x03ucpv7ftzo1vYL0LJuALT73eyOt7vl
        De9527ve+Ka3vu+973zz+9/+Dni/Bw5wggu84Ag/uMINzvCEN3zhDo84xCf+8IpL3OIUv7jGM85xjHt8
        4x/vOMhHLvKSh/zkJEe5yVPO8pW7XOUwb3nMXy7zmq/cLDjPuc53zvOe+/znQA+60LGHTvSiG/3oSE+6
        0pfO9KY7/elQj7rUp071qlv96ljPuta3zvWue/3rYA+72MdO9rKb/exoT7va1872trv97XCPu9znTve6
        2/3ueM+73vfO9777/e9maYHgB0/4whv+8IhPvOIXz/jGO/7xkI+85CdP+cpb/vKYz7zmN8/5znv+86AP
        vehHT/rSm/70qE+96lfP+ta7/vWwj73sZ0/72tv+9rjPve53z/ve+/73wKd8QAAAOw==
</value>
  </data>
</root>